{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","messageStart","messageLose","messageWin","scoreBoard","tableCells","querySelectorAll","tableSize","score","scoreBuffer","keyCode","left","up","right","down","gameTable","checkIfFull","i","includes","random","row","Math","floor","col","connect","data","arr","alpha","shift","beta","push","slice","makeMove","direction","gameDataNext","j","shifted","filter","val","length","reverse","gameEnd","addScore","reduce","acc","cur","textContent","action","endGame","result","classList","remove","removeEventListener","start","init","add","cleanTable","draw","addEventListener","map","el","_","gameDataUnpacked","forEach","rows","cells","text","className","e"],"mappings":";AAAA,aAiQA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/PA,IAAMA,EAASC,SAASC,cAAc,UAChCC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAaJ,SAASC,cAAc,gBACpCI,EAAaL,SAASC,cAAc,eACpCK,EAAaN,SAASO,iBAAiB,MACvCC,EAAY,EACdC,EAAQ,EACRC,EAAc,GAEZC,EAAU,CACdC,KAAM,GACNC,GAAI,GACJC,MAAO,GACPC,KAAM,IAEJC,EAAY,CACd,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAGZ,SAASC,IACF,IAAA,IAAIC,EAAI,EAAGA,EAAIV,EAAWU,IACzBF,GAAAA,EAAUG,SAAS,GACd,OAAA,EAKb,SAASC,IACA,MAACH,KAAe,CACfI,IAAAA,EAAMC,KAAKC,MAAsB,EAAhBD,KAAKF,UACtBI,EAAMF,KAAKC,MAAsB,EAAhBD,KAAKF,UAExBJ,GAAwB,IAAxBA,EAAUK,GAAKG,GAAY,CAC7BR,EAAUK,GAAKG,GAAQF,KAAKF,UAAY,GAAO,EAAI,EACnD,QAKN,SAASK,EAAQC,GACTC,IAAAA,EAAM,GACRC,EAAQF,EAAKG,QAEb,GAACD,EAAD,CAIC,IAAA,IAAIV,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAC5BY,IAAAA,EAAOJ,EAAKG,QAEd,IAACC,EAAM,CACLF,GACFD,EAAII,KAAKH,GAEX,MACSA,IAAUE,GACnBH,EAAII,KAAKH,EAAQE,GACjBpB,EAAYqB,KAAKH,EAAQE,GACzBF,EAAQ,MACCA,IAAUE,IACfF,GACFD,EAAII,KAAKH,GAEXA,EAAQE,GAILH,OAAAA,EAAIK,SAGb,SAASC,EAASC,GACVC,IAAAA,EAAe,CACnB,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAGJD,OAAAA,GACDvB,KAAAA,EAAQE,GACN,IAAA,IAAIuB,EAAI,EAAGA,EAAI5B,EAAW4B,IAAK,CAG7B,IAFCT,IAAAA,EAAM,GAEHT,EAAI,EAAGA,EAAIV,EAAWU,IAC7BS,EAAII,KAAKf,EAAUE,GAAGkB,IAGlBC,IAAAA,EAAUZ,EAAQE,EAAIW,OAAO,SAACC,GAAQA,OAAAA,EAAM,KAE9CF,GAAAA,EACG,IAAA,IAAInB,EAAI,EAAGA,EAAImB,EAAQG,OAAQtB,IAClCiB,EAAajB,GAAGkB,GAAKC,EAAQnB,GAInC,MAEGP,KAAAA,EAAQI,KACN,IAAA,IAAIqB,EAAI,EAAGA,EAAI5B,EAAW4B,IAAK,CAG7B,IAFCT,IAAAA,EAAM,GAEHT,EAAI,EAAGA,EAAIV,EAAWU,IAC7BS,EAAII,KAAKf,EAAUR,EAAY,EAAIU,GAAGkB,IAGlCC,IAAAA,EAAUZ,EAAQE,EAAIW,OAAO,SAACC,GAAQA,OAAAA,EAAM,KAE9CF,GAAAA,EACG,IAAA,IAAInB,EAAI,EAAGA,EAAImB,EAAQG,OAAQtB,IAClCiB,EAAa3B,EAAY,EAAIU,GAAGkB,GAAKC,EAAQnB,GAInD,MAEGP,KAAAA,EAAQC,KACN,IAAA,IAAIM,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAC5BmB,IAAAA,EAAUZ,EAAQT,EAAUE,GAAGoB,OAAO,SAACC,GAAQA,OAAAA,EAAM,KAEvDF,GAAAA,EACG,IAAA,IAAID,EAAI,EAAGA,EAAIC,EAAQG,OAAQJ,IAClCD,EAAajB,GAAGkB,GAAKC,EAAQD,GAInC,MAEGzB,KAAAA,EAAQG,MACN,IAAA,IAAII,EAAI,EAAGA,EAAIV,EAAWU,IAAK,CAC5BmB,IAAAA,EAAUZ,EAAQT,EAAUE,GAAGoB,OAAO,SAACC,GAC3CA,OAAAA,EAAM,IAAGE,WAEPJ,GAAAA,EACG,IAAA,IAAID,EAAI,EAAGA,EAAIC,EAAQG,OAAQJ,IAClCD,EAAajB,GAAGV,EAAY,EAAI4B,GAAKC,EAAQD,IAUhDD,OAAAA,EAGT,SAASO,IACH,GAAA,GAAG1B,OAAAA,KAAmBiB,GAAAA,OAAAA,EAAStB,EAAQE,MACxC,GAAGG,OAAAA,KAAmBiB,GAAAA,OAAAA,EAAStB,EAAQI,QACvC,GAAGC,OAAAA,KAAmBiB,GAAAA,OAAAA,EAAStB,EAAQC,QACvC,GAAGI,OAAAA,KAAmBiB,GAAAA,OAAAA,EAAStB,EAAQG,QACjC,OAAA,EAIX,SAAS6B,IACHjC,EAAY8B,OAAS,IACvB/B,GAASC,EAAYkC,OAAO,SAACC,EAAKC,GAAQD,OAAAA,EAAMC,IAChDzC,EAAW0C,YAAetC,GAAQ,GAItC,SAASuC,EAAOd,GACdxB,EAAc,GAERyB,IAAAA,EAAeF,EAASC,GAE1B,MAAA,GAAGlB,OAAAA,KAAmBmB,GAAAA,OAAAA,KAI1BnB,EAAYmB,GAEL,GAGT,SAASc,EAAQC,GACXA,EACF9C,EAAW+C,UAAUC,OAAO,UAE5BjD,EAAYgD,UAAUC,OAAO,UAE/BpD,SAASqD,oBAAoB,UAAWC,GAG1C,SAASC,IACPxD,EAAOoD,UAAUC,OAAO,SACxBrD,EAAOgD,YAAc,UACrBhD,EAAOoD,UAAUK,IAAI,WACrBtD,EAAaiD,UAAUK,IAAI,UAC3BpD,EAAW+C,UAAUK,IAAI,UACzBrD,EAAYgD,UAAUK,IAAI,UAC1BnD,EAAW0C,YAAc,IACzBtC,EAAQ,EACRgD,IACArC,IACAA,IACAsC,IACA1D,SAAS2D,iBAAiB,UAAWL,GAGvC,SAASG,IACHnD,EAAAA,GAAYsD,IAAI,SAAAC,GAClBA,EAAGV,UAAUC,OAAsBS,eAAAA,OAAAA,EAAGd,cACtCc,EAAGd,YAAc,KAGnB/B,EAAU4C,IAAI,SAAAvC,GAAOA,OAAAA,EAAIuC,IAAI,SAACE,EAAG5C,GAC/BG,EAAIH,GAAK,MAIb,SAASwC,IACDK,IAAAA,EAAmB,GAEzB/C,EAAUgD,QAAQ,SAACC,GACjBA,EAAKD,QAAQ,SAACE,GACZH,EAAiBhC,KAAKmC,OAI1B5D,EAAW0D,QAAQ,SAACE,GACZC,IAAAA,EAAOJ,EAAiBlC,QAE9BqC,EAAMnB,YAAeoB,GAAO,KAC5BD,EAAME,UAAY,aAClBF,EAAMf,UAAUK,IAAmBU,eAAAA,OAAAA,EAAMnB,gBAI7C,SAASO,EAAMe,GACTA,EAAE1D,QAAU,IAAM0D,EAAE1D,QAAU,IAI9BqC,EAAOqB,EAAE1D,WACPD,EAAYS,SAAS,OACvB8B,GAAQ,GAEVN,IACAvB,IAEKH,KAAkByB,KACrBO,GAAQ,GAEVvC,EAAc,GACdgD,KAIJ3D,EAAO4D,iBAAiB,QAASJ","file":"main.6b4dcb15.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message_start');\nconst messageLose = document.querySelector('.message_lose');\nconst messageWin = document.querySelector('.message_win');\nconst scoreBoard = document.querySelector('.game_score');\nconst tableCells = document.querySelectorAll('td');\nconst tableSize = 4;\nlet score = 0;\nlet scoreBuffer = [];\n\nconst keyCode = {\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n};\nlet gameTable = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction checkIfFull() {\n  for (let i = 0; i < tableSize; i++) {\n    if (gameTable.includes(0)) {\n      return false;\n    }\n  }\n}\n\nfunction random() {\n  while (!checkIfFull()) {\n    const row = Math.floor(Math.random() * 4);\n    const col = Math.floor(Math.random() * 4);\n\n    if (gameTable[row][col] === 0) {\n      gameTable[row][col] = (Math.random() >= 0.5) ? 4 : 2;\n      break;\n    }\n  }\n}\n\nfunction connect(data) {\n  const arr = [];\n  let alpha = data.shift();\n\n  if (!alpha) {\n    return;\n  }\n\n  for (let i = 0; i < tableSize; i++) {\n    const beta = data.shift();\n\n    if (!beta) {\n      if (alpha) {\n        arr.push(alpha);\n      }\n      break;\n    } else if (alpha === beta) {\n      arr.push(alpha + beta);\n      scoreBuffer.push(alpha + beta);\n      alpha = null;\n    } else if (alpha !== beta) {\n      if (alpha) {\n        arr.push(alpha);\n      }\n      alpha = beta;\n    }\n  }\n\n  return arr.slice();\n}\n\nfunction makeMove(direction) {\n  const gameDataNext = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  switch (direction) {\n    case keyCode.up:\n      for (let j = 0; j < tableSize; j++) {\n        const arr = [];\n\n        for (let i = 0; i < tableSize; i++) {\n          arr.push(gameTable[i][j]);\n        }\n\n        const shifted = connect(arr.filter((val) => val > 0));\n\n        if (shifted) {\n          for (let i = 0; i < shifted.length; i++) {\n            gameDataNext[i][j] = shifted[i];\n          }\n        }\n      }\n      break;\n\n    case keyCode.down:\n      for (let j = 0; j < tableSize; j++) {\n        const arr = [];\n\n        for (let i = 0; i < tableSize; i++) {\n          arr.push(gameTable[tableSize - 1 - i][j]);\n        }\n\n        const shifted = connect(arr.filter((val) => val > 0));\n\n        if (shifted) {\n          for (let i = 0; i < shifted.length; i++) {\n            gameDataNext[tableSize - 1 - i][j] = shifted[i];\n          }\n        }\n      }\n      break;\n\n    case keyCode.left:\n      for (let i = 0; i < tableSize; i++) {\n        const shifted = connect(gameTable[i].filter((val) => val > 0));\n\n        if (shifted) {\n          for (let j = 0; j < shifted.length; j++) {\n            gameDataNext[i][j] = shifted[j];\n          }\n        }\n      }\n      break;\n\n    case keyCode.right:\n      for (let i = 0; i < tableSize; i++) {\n        const shifted = connect(gameTable[i].filter((val) =>\n          val > 0).reverse());\n\n        if (shifted) {\n          for (let j = 0; j < shifted.length; j++) {\n            gameDataNext[i][tableSize - 1 - j] = shifted[j];\n          }\n        }\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  return gameDataNext;\n}\n\nfunction gameEnd() {\n  if (`${gameTable}` !== `${makeMove(keyCode.up)}`\n  || `${gameTable}` !== `${makeMove(keyCode.down)}`\n  || `${gameTable}` !== `${makeMove(keyCode.left)}`\n  || `${gameTable}` !== `${makeMove(keyCode.right)}`) {\n    return true;\n  }\n}\n\nfunction addScore() {\n  if (scoreBuffer.length > 0) {\n    score += scoreBuffer.reduce((acc, cur) => acc + cur);\n    scoreBoard.textContent = !score ? 0 : score;\n  }\n}\n\nfunction action(direction) {\n  scoreBuffer = [];\n\n  const gameDataNext = makeMove(direction);\n\n  if (`${gameTable}` === `${gameDataNext}`) {\n    return false;\n  }\n\n  gameTable = gameDataNext;\n\n  return true;\n}\n\nfunction endGame(result) {\n  if (result) {\n    messageWin.classList.remove('hidden');\n  } else {\n    messageLose.classList.remove('hidden');\n  }\n  document.removeEventListener('keydown', start);\n}\n\nfunction init() {\n  button.classList.remove('start');\n  button.textContent = 'Restart';\n  button.classList.add('restart');\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  scoreBoard.textContent = '0';\n  score = 0;\n  cleanTable();\n  random();\n  random();\n  draw();\n  document.addEventListener('keydown', start);\n}\n\nfunction cleanTable() {\n  [...tableCells].map(el => {\n    el.classList.remove(`field_cell--${el.textContent}`);\n    el.textContent = '';\n  });\n\n  gameTable.map(row => row.map((_, i) => {\n    row[i] = 0;\n  }));\n}\n\nfunction draw() {\n  const gameDataUnpacked = [];\n\n  gameTable.forEach((rows) => {\n    rows.forEach((cells) => {\n      gameDataUnpacked.push(cells);\n    });\n  });\n\n  tableCells.forEach((cells) => {\n    const text = gameDataUnpacked.shift();\n\n    cells.textContent = !text ? null : text;\n    cells.className = 'field_cell';\n    cells.classList.add(`field_cell--${cells.textContent}`);\n  });\n}\n\nfunction start(e) {\n  if (e.keyCode < 36 || e.keyCode > 41) {\n    return;\n  }\n\n  if (action(e.keyCode)) {\n    if (scoreBuffer.includes(2048)) {\n      endGame(true);\n    }\n    addScore();\n    random();\n\n    if (!checkIfFull() && !gameEnd()) {\n      endGame(false);\n    }\n    scoreBuffer = [];\n    draw();\n  }\n}\n\nbutton.addEventListener('click', init);\n"]}